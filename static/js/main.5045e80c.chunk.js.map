{"version":3,"sources":["Form/styled.js","Form/index.js","Form/useForm.js","Tasks/styled.js","Tasks/index.js","Buttons/syled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["FormElement","styled","form","Input","input","FormButton","button","theme","color","teal","white","breakpoint","mobileMax","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","focusInput","current","focus","useForm","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","autoFocus","ref","value","placeholder","onChange","target","onClick","List","ul","Item","li","hidden","css","Content","span","done","Button","toggleDone","green","remove","red","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","content","ButtonsDiv","div","ButtonAdditional","grey","Buttons","toggleHideDone","setAllDone","length","disabled","every","some","PageSection","section","PageSectionDiv","PageSectionH2","h2","Section","title","body","extraContent","PageHeader","header","Header","Container","children","App","sethideDone","tasksFromLocalStorage","localStorage","getItem","JSON","parse","setTasks","filter","useTasks","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5045e80c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FormElement = styled.form`\n    padding: 20px;\n    background: white;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n`;\n\nexport const Input = styled.input`\n    flex-grow: 1;\n    padding: 10px;\n    border: 1px solid #80808040;\n    border-radius: 1px;\n`;\n\nexport const FormButton = styled.button`\n    background: ${({ theme }) => theme.color.teal};\n    color: ${({ theme }) => theme.color.white};\n    padding: 10px;\n    margin: 0px 0px 0px 15px;\n    border: none;\n    cursor: pointer;\n    transition: 1s;\n\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\n        flex-basis: 100%;\n        margin: 7px 0px;\n    }\n\n    &:hover {\n    filter: brightness(110%);\n    transform: scale(1.1);\n    }   \n\n    &:active {\n        filter: brightness(120%);\n    }\n\n    \n`;","import { FormElement, Input, FormButton } from \"./styled\";\nimport { useForm } from \"./useForm\";\n\nconst Form = ({ addNewTask }) => {\n\n  const {\n    newTaskContent,\n    setNewTaskContent,\n    inputRef,\n    focusInput,\n  } = useForm()\n\n  const onFormSubmit = (event,) => {\n    event.preventDefault();\n    const trimmedNewTaskContent = newTaskContent.trim();\n    if (trimmedNewTaskContent) {\n      addNewTask(trimmedNewTaskContent);\n      setNewTaskContent(\"\");\n    };\n  };\n\n  return (\n    <FormElement onSubmit={onFormSubmit}>\n      <Input\n        autoFocus\n        ref={inputRef}\n        value={newTaskContent}\n        placeholder=\"Co jest do zrobienia?\"\n        onChange={({ target }) => setNewTaskContent(target.value)}\n      />\n      <FormButton onClick={focusInput}>Dodaj zadanie</FormButton>\n    </FormElement>\n  );\n};\n\nexport default Form;","import { useState, useRef, } from \"react\";\n\nexport const useForm = () => {\n    const [newTaskContent, setNewTaskContent] = useState(\"\")\n\n    const inputRef = useRef();\n    const focusInput = () => {\n        inputRef.current.focus()\n    };\n\n    return {\n        newTaskContent,\n        setNewTaskContent,\n        inputRef,\n        focusInput,\n    };\n};","import styled, { css } from \"styled-components\";\n\nexport const List = styled.ul`\n    padding: 20px 0px;\n    margin: 0px;\n    background: white;\n`;\n\nexport const Item = styled.li`\n    display: flex;\n    margin: 0px 15px;\n    padding: 10px;\n    align-items: center;\n    border-bottom: 1px solid #80808040;\n    word-break: break-word;\n\n   ${({ hidden }) => hidden && css`\n        display: none;\n   `}\n`;\n\nexport const Content = styled.span`\n    padding: 0px 10px;\n    flex-grow: 1;\n    color: #565555;\n    ${({ done }) => done && css`\n        text-decoration: line-through;\n    `}\n`;\n\nexport const Button = styled.button`\n    background: green;\n    border: none;\n    width: 27px;\n    height: 27px;\n    padding: 5px;\n    color: white;\n    flex-shrink: 0;\n    cursor: pointer;\n    transition: 0.3s;\n\n    ${({ toggleDone }) => toggleDone && css`\n        background : ${({ theme }) => theme.color.green};\n\n        &:hover {\n            filter: brightness(110%);\n    }       \n\n        &:active {\n            filter: brightness(120%);\n        }\n    `}\n\n    ${({ remove }) => remove && css`\n    background: ${({ theme }) => theme.color.red};\n   \n    &:hover {\n        filter: brightness(110%);\n    }\n\n    &:active {\n        filter: brightness(120%);\n    }\n    `} \n`;","import React from \"react\";\nimport { List, Item, Content, Button } from \"./styled\";\n\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => {\n\n    return (\n        <List>\n            {tasks.map(task => (\n                <Item\n                    key={task.id}\n                    hidden={task.done && hideDone}\n                >\n                    <Button\n                        toggleDone\n                        onClick={() => toggleTaskDone(task.id)}\n                    >\n                        {task.done ? \"âœ“\" : \"\"}\n                    </Button>\n                    <Content done={task.done}>\n                        {task.content}\n                    </Content>\n                    <Button\n                        remove\n                        onClick={() => removeTask(task.id)}\n                    >\n                        &#128465;\n                    </Button>\n                </Item>\n            ))}\n        </List>\n    );\n};\n\nexport default Tasks;","import styled from \"styled-components\";\n\nexport const ButtonsDiv = styled.div`\n    display: flex;\n    align-items: center;\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\n        flex-direction: column;\n        flex-basis: 100%;\n    }\n`;\n\nexport const ButtonAdditional = styled.button`\n    border: none;\n    background: ${({ theme }) => theme.color.white};\n    color: ${({ theme }) => theme.color.teal};\n    grid-gap: 20px;\n    transition: 1s;\n    margin: 10px 0px;\n    cursor: pointer;\n\n    &:hover {\n    filter: brightness(110%);\n    }\n\n    &:active {\n        filter: brightness(120%);\n    }\n\n    &:disabled {\n        color: ${({ theme }) => theme.color.grey};\n    cursor: unset;\n    }\n`;","import React from \"react\";\nimport { ButtonsDiv, ButtonAdditional } from \"./syled\";\n\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\n\n    <ButtonsDiv>\n        {tasks.length > 0 && (\n            <>\n                <ButtonAdditional onClick={toggleHideDone}\n                    disabled={tasks.every(({ done }) => !done)}\n                >\n                    {tasks.some(({ done }) => done) ? `${hideDone ? \"PokaÅ¼\" : \"Ukryj\"}` : \"Ukryj\"} ukoÅ„czone\n                </ButtonAdditional>\n\n                <ButtonAdditional\n                    onClick={setAllDone}\n                    disabled={tasks.every(({ done }) => done)}\n                >\n                    UkoÅ„cz wszystkie\n                </ButtonAdditional>\n            </>\n        )}\n    </ButtonsDiv>\n);\n\nexport default Buttons;","import styled from \"styled-components\";\n\nexport const PageSection = styled.section`\n     margin: 0 5px 5px;\n`;\n\nexport const PageSectionDiv = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    background: white;\n    margin: 0px 0px 1px 0px;\n    padding-right: 15px;\n`;\n\nexport const PageSectionH2 = styled.h2`\n    margin: 0 0 1px;\n    padding: 15px;\n    background: ${({ theme }) => theme.color.white};\n    font-size: 17px;\n`;","import React from \"react\";\nimport { PageSection, PageSectionDiv, PageSectionH2 } from \"./styled\";\n\nconst Section = ({ title, body, extraContent }) => (\n    <PageSection>\n        <PageSectionDiv>\n            <PageSectionH2>{title}</PageSectionH2>\n            {extraContent}\n        </PageSectionDiv>\n        {body}\n    </PageSection>\n);\n\nexport default Section;","import styled from \"styled-components\";\n\nexport const PageHeader = styled.header`\n    margin: 0px 5px;\n`;","import React from \"react\";\nimport { PageHeader } from \"./styled\";\n\nconst Header = ({ title }) => (\n    <PageHeader>\n        <h1>{title}</h1>\n    </PageHeader>\n);\n\nexport default Header;","import React from \"react\";\n\nconst Container = ({ children }) => (\n    <main>\n        {children}\n    </main>\n);\n\nexport default Container;","import React, { useState, useEffect } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useTasks } from \"./useTasks\"\n\nfunction App() {\n\n  const [hideDone, sethideDone] = useState(false);\n  const toggleHideDone = () => {\n    sethideDone(hideDone => !hideDone);\n  };\n\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n  useEffect(() => {\n    localStorage.setItem(\"savedTasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <Container>\n      <Header\n        title=\"Lista zadaÅ„\"\n      />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone} />\n        }\n      />\n    </Container>\n  );\n};\n\nexport default App;","import { useState } from \"react\";\n\nexport const useTasks = () => {\n    const getInitialTasks = () => {\n        const tasksFromLocalStorage = localStorage.getItem(\"savedTasks\");\n        return tasksFromLocalStorage\n            ? JSON.parse(tasksFromLocalStorage)\n            : [];\n    };\n\n    const [tasks, setTasks] = useState(getInitialTasks);\n\n    const removeTask = (id) => {\n        setTasks(tasks => tasks.filter(task => task.id !== id));\n    };\n\n    const toggleTaskDone = (id) => {\n        setTasks(tasks => tasks.map(task => {\n            if (task.id === id) {\n                return { ...task, done: !task.done };\n            }\n\n            return task;\n        }));\n    };\n\n    const setAllDone = () => {\n        setTasks(tasks => tasks.map(task => ({\n            ...task,\n            done: true\n        })));\n    };\n\n    const addNewTask = (content) => {\n        setTasks(tasks => [\n            ...tasks,\n            {\n                content,\n                done: false,\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n            }]);\n    };\n    return {\n        tasks,\n        removeTask,\n        toggleTaskDone,\n        setAllDone,\n        addNewTask,\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    font-family: \"Montserrat\", sans-serif;\n    margin: 0 auto;\n    max-width: 900px;\n    background: rgba(219, 216, 216, 0.733);\n    font-size: 15px;\n}\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Normalize } from 'styled-normalize';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Normalize />\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    color: {\n        green: \"#00800\",\n        red: \"#ff0000\",\n        teal: \"teal\",\n        white: \"white\",\n        grey: \"grey\",\n    },\n    breakpoint: {\n        mobileMax:767,\n    },\n};"],"sourceRoot":""}