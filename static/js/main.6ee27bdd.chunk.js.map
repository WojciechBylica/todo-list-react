{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","value","placeholder","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","some","every","Section","title","body","extraDivContent","Header","Container","children","App","sethideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ee27bdd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\n\nconst Form = ({ addNewTask }) => {\n\n  const [newTaskContent, setNewTaskContent] = useState(\"\")\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const trimmedNewTaskContent = newTaskContent.trim();\n    if (trimmedNewTaskContent) {\n      addNewTask(trimmedNewTaskContent);\n      setNewTaskContent(\"\");\n    };\n\n  };\n\n  return (\n    <form className=\"form\" onSubmit={onFormSubmit}>\n      <input\n        value={newTaskContent}\n        className=\" form__input\"\n        placeholder=\"Co jest do zrobienia?\"\n        onChange={({ target }) => setNewTaskContent(target.value)}\n      />\n      <button className=\"form__button\">Dodaj zadanie</button>\n    </form>\n  );\n};\n\nexport default Form;","import React from \"react\";\nimport \"./style.css\";\n\n\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => {\n\n    return (\n        <ul className=\"tasks\">\n            {tasks.map(task => (\n                <li\n                    key={task.id}\n                    className={`tasks__item${task.done && hideDone ? \" tasks__item--hidden\" : \"\"}`}\n                >\n                    <button\n                        className=\"tasks__button\"\n                        onClick={() => toggleTaskDone(task.id)}\n                    >\n                        {task.done ? \"✓\" : \"\"}\n                    </button>\n                    <div className={`tasks__div${task.done ? \" tasks__div--done\" : \"\"}`}>\n                        {task.content}\n                    </div>\n                    <button\n                        className=\"tasks__button tasks__button--remove\"\n                        onClick={() => removeTask(task.id)}\n                    >\n                        &#128465;\n                    </button>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default Tasks;","import React from \"react\";\nimport \"./style.css\";\n\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\n\n    <div className=\"buttons\">\n        {tasks.length > 0 && (\n            <>\n                <button onClick={toggleHideDone}\n                    className=\"buttons__additionalButton\"\n                    disabled={tasks.some(({ done }) => done) ? \"\" : \"{true}\"}\n                >\n                    {tasks.some(({ done }) => done) ? `${hideDone ? \"Pokaż\" : \"Ukryj\"}` : \"Ukryj\"} ukończone\n                </button>\n\n                <button\n                    onClick={setAllDone}\n                    className=\"buttons__additionalButton\"\n                    disabled={tasks.every(({ done }) => done)}\n                >\n                    Ukończ wszystkie\n                </button>\n            </>\n        )}\n    </div>\n);\n\nexport default Buttons;","import React from \"react\";\nimport \"./style.css\";\n\nconst Section = ({ title, body, extraDivContent }) => (\n    <section className=\"section\">\n        <div className=\"section__div\">\n            <h2 className=\"section__header\">{title}</h2>\n            {extraDivContent}\n        </div>\n        {body}\n    </section>\n);\n\nexport default Section;","import React from \"react\";\nimport \"./style.css\";\n\nconst Header = ({ title }) => (\n    <header className=\"header\">\n        <h1>{title}</h1>\n    </header>\n);\n\nexport default Header;","import React from \"react\";\n\nconst Container = ({ children }) => (\n    <main>\n        {children}\n    </main>\n);\n\nexport default Container;","import React, { useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [hideDone, sethideDone] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  const toggleHideDone = () => {\n    sethideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true\n    })))\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      }])\n  };\n\n  return (\n    <Container>\n      <Header\n        title=\"Lista zadań\"\n      />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadań\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraDivContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone} />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}