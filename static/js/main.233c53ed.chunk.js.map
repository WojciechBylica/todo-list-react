{"version":3,"sources":["features/tasks/TasksPage/Form/styled.js","features/tasks/Input/index.js","features/tasks/tasksLocalStorage.js","features/tasks/tasksSlice.js","features/tasks/TasksPage/Form/index.js","features/tasks/TasksPage/Form/useForm.js","features/tasks/TasksPage/TaskList/styled.js","features/tasks/TasksPage/Search/searchQueryParamName.js","routes.js","features/tasks/TasksPage/TaskList/index.js","features/tasks/TasksPage/Button/index.js","features/tasks/TasksPage/Buttons/index.js","features/tasks/TasksPage/SampleTasksButton/index.js","common/Section/styled.js","common/Section/index.js","common/Header/styled.js","common/Header/index.js","common/Container/index.js","features/tasks/TasksPage/Search/styled.js","features/tasks/TasksPage/Search/index.js","features/tasks/TasksPage/queryParameters.js","features/tasks/TasksPage/index.js","features/tasks/TaskPage/styled.js","features/tasks/TaskPage/index.js","features/author/styled.js","features/author/WBTaiko.png","features/author/AuthorPage.js","Navigation/styled.js","Navigation/index.js","App.js","reportWebVitals.js","GlobalStyle.js","features/tasks/getExampleTasks.js","features/tasks/tasksSaga.js","rootSaga.js","store.js","index.js","theme.js"],"names":["FormElement","styled","form","FormButton","button","theme","color","teal","white","breakpoint","mobileMax","Input","input","localStorageKey","saveTasksInLocalStorage","tasks","localStorage","setItem","JSON","stringify","tasksSlice","createSlice","name","initialState","getItem","parse","hideDone","status","reducers","addTask","task","payload","push","toggleHideDone","state","toggleTaskDone","tasksId","index","findIndex","id","done","removeTask","taskId","splice","setAllDone","fetchExampleTasks","fetchExampleTasksSuccess","fetchExampleTasksError","actions","selectTasksState","selectTasks","selectHideDone","selectAreTasksNotEmpty","length","selectIsEveryTaskDone","every","selectIsAnyTaskDone","some","selectLoading","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","focusInput","current","focus","useForm","dispatch","useDispatch","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","content","nanoid","autoFocus","ref","value","placeholder","onChange","target","onClick","List","ul","Item","li","hidden","css","Content","span","StyledLink","a","Button","toggleDone","green","remove","red","toTask","TaskList","location","useLocation","query","URLSearchParams","search","get","searchQueryParamName","useSelector","filter","toUpperCase","includes","selectTasksByQuery","map","as","Link","to","ButtonsDiv","div","ButtonAdditional","grey","Buttons","areTasksNotEmpty","isEveryTaskDone","isAnyTaskDone","disabled","SampleTasksButton","loading","PageSection","section","PageSectionDiv","PageSectionH2","h2","Section","title","body","extraContent","PageHeader","header","Header","Container","children","Wrapper","parameter","useQueryParameter","replaceQueryParameter","history","useHistory","key","searchParams","set","delete","pathname","toString","useReplaceQueryParameter","undefined","TasksPage","Search","TaskPage","useParams","find","getTaskById","mobile","Image","img","StyledParagraph","p","src","WBTaiko","alt","activeClassName","StyledNavLink","NavLink","attrs","StyledNav","nav","StyledList","StyledItem","Navigation","path","AuthorPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","getExampleTasks","fetch","response","ok","Error","statusText","json","fetchExampleTasksHandler","saveTasksInLocalStorageHandler","tasksSaga","delay","call","exampleTasks","put","alert","select","throttle","type","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.233c53ed.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormElement = styled.form`\n  padding: 20px;\n  background: white;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const FormButton = styled.button`\n  background: ${({ theme }) => theme.color.teal};\n  color: ${({ theme }) => theme.color.white};\n  padding: 11px;\n  margin: 0px 0px 0px 15px;\n  border: none;\n  cursor: pointer;\n  transition: 1s;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\n    flex-basis: 100%;\n    margin: 7px 0px;\n  }\n\n  &:hover {\n    filter: brightness(110%);\n    transform: scale(1.1);\n  }\n\n  &:active {\n    filter: brightness(120%);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  flex-grow: 1;\n  padding: 10px;\n  border: 1px solid #80808040;\n  border-radius: 1px;\n  font-size: 16px;\n`;\n","const localStorageKey = 'tasks';\n\nexport const saveTasksInLocalStorage = (tasks) =>\n  localStorage.setItem(localStorageKey, JSON.stringify(tasks));\n\nexport const getTasksFromLocalStorage = () => {\n  return localStorage.getItem(localStorageKey)\n    ? JSON.parse(localStorage.getItem(localStorageKey))\n    : [];\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { getTasksFromLocalStorage } from './tasksLocalStorage';\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: getTasksFromLocalStorage(),\n    hideDone: false,\n    status: 'success',\n  },\n  reducers: {\n    addTask: ({ tasks }, { payload: task }) => {\n      tasks.push(task);\n    },\n    toggleHideDone: (state) => {\n      state.hideDone = !state.hideDone;\n    },\n    toggleTaskDone: ({ tasks }, { payload: tasksId }) => {\n      const index = tasks.findIndex(({ id }) => id === tasksId);\n      tasks[index].done = !tasks[index].done;\n    },\n    removeTask: ({ tasks }, { payload: taskId }) => {\n      const index = tasks.findIndex(({ id }) => id === taskId);\n      tasks.splice(index, 1);\n    },\n    setAllDone: ({ tasks }) => {\n      for (const task of tasks) {\n        task.done = true;\n      }\n    },\n    fetchExampleTasks: (state) => {\n      state.status = 'loading';\n    },\n    fetchExampleTasksSuccess: (state, { payload: tasks }) => {\n      state.tasks = tasks;\n      state.status = 'success';\n    },\n    fetchExampleTasksError: (state) => {\n      state.status = 'error';\n    },\n  },\n});\n\nexport const {\n  addTask,\n  toggleHideDone,\n  toggleTaskDone,\n  removeTask,\n  setAllDone,\n  fetchExampleTasks,\n  fetchExampleTasksSuccess,\n  fetchExampleTasksError,\n} = tasksSlice.actions;\n\nexport const selectTasksState = (state) => state.tasks;\n\nexport const selectTasks = (state) => selectTasksState(state).tasks;\nexport const selectHideDone = (state) => selectTasksState(state).hideDone;\nexport const selectAreTasksNotEmpty = (state) => selectTasks(state).length > 0;\nexport const selectIsEveryTaskDone = (state) =>\n  selectTasks(state).every(({ done }) => done);\nexport const selectIsAnyTaskDone = (state) =>\n  selectTasks(state).some(({ done }) => done);\nexport const selectLoading = (state) =>\n  selectTasksState(state).status === 'loading';\n\nexport const getTaskById = (state, taskId) =>\n  selectTasks(state).find(({ id }) => id === taskId);\n\nexport const selectTasksByQuery = (state, query) => {\n  const tasks = selectTasks(state);\n\n  if (!query || query.trim() === '') {\n    return tasks;\n  }\n  return tasks.filter(({ content }) =>\n    content.toUpperCase().includes(query.trim().toUpperCase())\n  );\n};\n\nexport default tasksSlice.reducer;\n","import { FormElement, FormButton } from './styled';\nimport { Input } from '../../Input';\nimport { useForm } from './useForm';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addTask } from '../../tasksSlice';\n\nconst Form = () => {\n  const { newTaskContent, setNewTaskContent, inputRef, focusInput } = useForm();\n\n  const dispatch = useDispatch();\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const trimmedNewTaskContent = newTaskContent.trim();\n\n    if (trimmedNewTaskContent) {\n      dispatch(\n        addTask({\n          content: trimmedNewTaskContent,\n          done: false,\n          id: nanoid(),\n        })\n      );\n\n      setNewTaskContent('');\n    }\n  };\n\n  return (\n    <FormElement onSubmit={onFormSubmit}>\n      <Input\n        autoFocus\n        ref={inputRef}\n        value={newTaskContent}\n        placeholder=\"Co jest do zrobienia?\"\n        onChange={({ target }) => setNewTaskContent(target.value)}\n      />\n\n      <FormButton onClick={focusInput}>Dodaj zadanie</FormButton>\n    </FormElement>\n  );\n};\n\nexport default Form;\n","import { useState, useRef } from 'react';\n\nexport const useForm = () => {\n  const [newTaskContent, setNewTaskContent] = useState('');\n\n  const inputRef = useRef();\n\n  const focusInput = () => {\n    inputRef.current.focus();\n  };\n\n  return {\n    newTaskContent,\n    setNewTaskContent,\n    inputRef,\n    focusInput,\n  };\n};\n","import styled, { css } from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 20px 0px;\n  margin: 0px;\n  background: white;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  margin: 0px 15px;\n  padding: 10px;\n  align-items: center;\n  border-bottom: 1px solid #80808040;\n  word-break: break-word;\n\n  ${({ hidden }) =>\n    hidden &&\n    css`\n      display: none;\n    `}\n`;\n\nexport const Content = styled.span`\n  padding: 0px 10px;\n  flex-grow: 1;\n  color: #565555;\n\n  ${({ done }) =>\n    done &&\n    css`\n      text-decoration: line-through;\n    `}\n`;\n\nexport const StyledLink = styled.a`\n  text-decoration: none;\n  color: ${({ theme }) => theme.color.teal};\n\n  &:hover {\n    filter: brightness(120%);\n  }\n`;\n\nexport const Button = styled.button`\n  background: green;\n  border: none;\n  width: 27px;\n  height: 27px;\n  padding: 5px;\n  color: white;\n  flex-shrink: 0;\n  cursor: pointer;\n  transition: 0.3s;\n\n  ${({ toggleDone }) =>\n    toggleDone &&\n    css`\n      background: ${({ theme }) => theme.color.green};\n\n      &:hover {\n        filter: brightness(110%);\n      }\n\n      &:active {\n        filter: brightness(120%);\n      }\n    `}\n\n  ${({ remove }) =>\n    remove &&\n    css`\n      background: ${({ theme }) => theme.color.red};\n\n      &:hover {\n        filter: brightness(110%);\n      }\n\n      &:active {\n        filter: brightness(120%);\n      }\n    `}\n`;\n","export default 'szukaj';\n","export const toTasks = () => '/zadania';\nexport const toAuthor = () => '/autor';\n\nexport const toTask = ({ id } = { id: ':id' }) => `/zadania/${id}`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  toggleTaskDone,\n  removeTask,\n  selectHideDone,\n  selectTasksByQuery,\n} from '../../tasksSlice';\nimport { List, Item, Content, Button, StyledLink } from './styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport searchQueryParamName from '../Search/searchQueryParamName';\nimport { toTask } from '../../../../routes';\n\nconst TaskList = () => {\n  const location = useLocation();\n  const query = new URLSearchParams(location.search).get(searchQueryParamName);\n\n  const tasks = useSelector((state) => selectTasksByQuery(state, query));\n  const hideDone = useSelector(selectHideDone);\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {tasks.map((task) => (\n        <Item key={task.id} hidden={task.done && hideDone}>\n          <Button toggleDone onClick={() => dispatch(toggleTaskDone(task.id))}>\n            {task.done ? '✓' : ''}\n          </Button>\n\n          <Content done={task.done}>\n            <StyledLink as={Link} to={toTask({ id: task.id })}>\n              {task.content}\n            </StyledLink>\n          </Content>\n\n          <Button remove onClick={() => dispatch(removeTask(task.id))}>\n            &#128465;\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default TaskList;\n","import styled from 'styled-components';\n\nexport const ButtonsDiv = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\n    flex-direction: column;\n    flex-basis: 100%;\n  }\n`;\n\nexport const ButtonAdditional = styled.button`\n  border: none;\n  background: ${({ theme }) => theme.color.white};\n  color: ${({ theme }) => theme.color.teal};\n  grid-gap: 20px;\n  transition: 1s;\n  margin: 10px 0px;\n  cursor: pointer;\n\n  &:hover {\n    filter: brightness(110%);\n  }\n\n  &:active {\n    filter: brightness(120%);\n  }\n\n  &:disabled {\n    color: ${({ theme }) => theme.color.grey};\n    cursor: unset;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectIsAnyTaskDone,\n  selectHideDone,\n  selectIsEveryTaskDone,\n  selectAreTasksNotEmpty,\n  toggleHideDone,\n  setAllDone,\n} from '../../tasksSlice';\nimport { ButtonsDiv, ButtonAdditional } from '../Button';\n\nconst Buttons = () => {\n  const areTasksNotEmpty = useSelector(selectAreTasksNotEmpty);\n  const isEveryTaskDone = useSelector(selectIsEveryTaskDone);\n  const hideDone = useSelector(selectHideDone);\n  const isAnyTaskDone = useSelector(selectIsAnyTaskDone);\n  const dispatch = useDispatch();\n\n  return (\n    <ButtonsDiv>\n      {areTasksNotEmpty && (\n        <>\n          <ButtonAdditional\n            onClick={() => dispatch(toggleHideDone())}\n            disabled={!isAnyTaskDone}\n          >\n            {hideDone ? 'Pokaż' : 'Ukryj'} ukończone\n          </ButtonAdditional>\n\n          <ButtonAdditional\n            onClick={() => dispatch(setAllDone())}\n            disabled={isEveryTaskDone}\n          >\n            Ukończ wszystkie\n          </ButtonAdditional>\n        </>\n      )}\n    </ButtonsDiv>\n  );\n};\n\nexport default Buttons;\n","import { ButtonAdditional, ButtonsDiv } from '../Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchExampleTasks, selectLoading } from '../../tasksSlice';\n\nconst SampleTasksButton = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n  return (\n    <ButtonsDiv>\n      <ButtonAdditional\n        disabled={loading}\n        onClick={() => dispatch(fetchExampleTasks())}\n      >\n        {loading ? 'ładowanie...' : 'Pobierz przykładowe zadania'}\n      </ButtonAdditional>\n    </ButtonsDiv>\n  );\n};\n\nexport default SampleTasksButton;\n","import styled from 'styled-components';\n\nexport const PageSection = styled.section`\n  margin: 0 5px 5px;\n`;\n\nexport const PageSectionDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  background: ${({ theme }) => theme.color.white};\n  margin: 0px 0px 1px 0px;\n  padding-right: 15px;\n`;\n\nexport const PageSectionH2 = styled.h2`\n  margin: 0 0 1px;\n  padding: 15px;\n  background: ${({ theme }) => theme.color.white};\n  font-size: 17px;\n`;\n","import { PageSection, PageSectionDiv, PageSectionH2 } from './styled';\n\nconst Section = ({ title, body, extraContent }) => (\n  <PageSection>\n    <PageSectionDiv>\n      <PageSectionH2>{title}</PageSectionH2>\n      {extraContent}\n    </PageSectionDiv>\n    {body}\n  </PageSection>\n);\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const PageHeader = styled.header`\n  margin: 0px 5px;\n`;\n","import { PageHeader } from './styled';\n\nconst Header = ({ title }) => (\n  <PageHeader>\n    <h1>{title}</h1>\n  </PageHeader>\n);\n\nexport default Header;\n","const Container = ({ children }) => <main>{children}</main>;\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  padding: 20px;\n  background: ${({ theme }) => theme.color.white};\n`;\n","import { Input } from '../../Input';\nimport { Wrapper } from './styled';\nimport searchQueryParamName from './searchQueryParamName';\nimport {\n  useQueryParameter,\n  useReplaceQueryParameter,\n} from '../queryParameters';\n\nexport default () => {\n  const query = useQueryParameter(searchQueryParamName);\n  const replaceQueryParameter = useReplaceQueryParameter();\n\n  const onInputChange = ({ target }) => {\n    replaceQueryParameter({\n      key: searchQueryParamName,\n      value: target.value.trim() !== '' ? target.value : undefined,\n    });\n  };\n\n  return (\n    <Wrapper>\n      <Input\n        placeholder=\"Filtruj zadania\"\n        value={query || ''}\n        onChange={onInputChange}\n      />\n    </Wrapper>\n  );\n};\n","import { useHistory, useLocation } from 'react-router-dom';\n\nexport const useQueryParameter = (parameter) => {\n  const location = useLocation();\n  return new URLSearchParams(location.search).get(parameter);\n};\n\nexport const useReplaceQueryParameter = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return ({ key, value }) => {\n    const searchParams = new URLSearchParams(location.search);\n\n    if (!value) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, value);\n    }\n\n    history.push(`${location.pathname}?${searchParams.toString()}`);\n  };\n};\n","import Form from './Form';\nimport TaskList from './TaskList';\nimport Buttons from './Buttons';\nimport SampletasksButton from './SampleTasksButton';\nimport Section from '../../../common/Section';\nimport Header from '../../../common/Header';\nimport Container from '../../../common/Container';\nimport Search from './Search';\n\nfunction TasksPage() {\n  return (\n    <Container>\n      <Header title=\"Lista zadań\" />\n\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form />}\n        extraContent={<SampletasksButton />}\n      />\n\n      <Section title=\"Wyszukiwarka\" body={<Search />} />\n\n      <Section\n        title=\"Lista zadań\"\n        body={<TaskList />}\n        extraContent={<Buttons />}\n      />\n    </Container>\n  );\n}\n\nexport default TasksPage;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  background: ${({ theme }) => theme.color.white};\n`;\n","import Section from '../../../common/Section';\nimport Header from '../../../common/Header';\nimport Container from '../../../common/Container';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getTaskById } from '../tasksSlice';\nimport { Wrapper } from './styled';\n\nfunction TaskPage() {\n  const { id } = useParams();\n  const task = useSelector((state) => getTaskById(state, id));\n\n  return (\n    <Container>\n      <Header title=\"Szczegóły zadania\" />\n\n      <Section\n        title={task ? task.content : 'Nie znaleziono zadania😟'}\n        body={\n          !!task && (\n            <>\n              <Wrapper>\n                <strong>Ukończono:</strong> {task.done ? 'tak' : 'nie'}\n              </Wrapper>\n            </>\n          )\n        }\n      />\n    </Container>\n  );\n}\n\nexport default TaskPage;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  background: ${({ theme }) => theme.color.white};\n  text-align: justify;\n  display: flex;\n  align-items: center;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\n    text-align: left;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n    flex-direction: column;\n    text-align: left;\n  }\n`;\n\nexport const Image = styled.img`\n  height: 202px;\n  width: 250px;\n  border-radius: 50px;\n  margin: 0 10px;\n`;\n\nexport const StyledParagraph = styled.p`\n  align-self: flex-start;\n`;\n","export default __webpack_public_path__ + \"static/media/WBTaiko.38ae8e0f.png\";","import Container from \"../../common/Container\";\nimport Section from \"../../common/Section\";\nimport Header from \"../../common/Header\";\nimport { Image, StyledParagraph, Wrapper } from \"./styled\";\nimport WBTaiko from \"./WBTaiko.png\";\n\nexport default () => (\n    <Container>\n        <Header title=\"O autorze\" />\n        <Section\n            title=\"Wojciech Bylica\"\n            body={\n                <>\n                    <Wrapper>\n                        <Image src={WBTaiko} alt=\"Wojciech Bylica photo\" />\n                        <StyledParagraph>Perkusista, kompozytor, twórca o szerokich zainteresowaniach\n                            stylistycznych. Absolwent UMFC w Warszawie i PSJ im.\n                            H. Majewskiego w Warszawie. Stypendysta Urbanator Days, laureat konkursu Roland V-Drums.\n                        </StyledParagraph>\n                    </Wrapper>\n                </>\n            }\n        />\n    </Container>\n);","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nconst activeClassName = 'active';\n\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\n  activeClassName,\n}))`\n  color: ${({ theme }) => theme.color.white};\n  text-decoration: none;\n\n  &.${activeClassName} {\n    font-weight: bold;\n  }\n`;\n\nexport const StyledNav = styled.nav`\n  background: ${({ theme }) => theme.color.teal};\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  padding: 15px;\n  list-style-type: none;\n`;\n\nexport const StyledItem = styled.li`\n  margin: 0 10px;\n`;\n","import { toAuthor, toTasks } from '../routes';\nimport { StyledItem, StyledList, StyledNav, StyledNavLink } from './styled';\n\nconst Navigation = () => (\n  <StyledNav>\n    <StyledList>\n      <StyledItem>\n        <StyledNavLink to={toTasks()}>Zadania</StyledNavLink>\n      </StyledItem>\n      <StyledItem>\n        <StyledNavLink to={toAuthor()}>O autorze</StyledNavLink>\n      </StyledItem>\n    </StyledList>\n  </StyledNav>\n);\n\nexport default Navigation;\n","import { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport TasksPage from \"./features/tasks/TasksPage/index\";\nimport TaskPage from \"./features/tasks/TaskPage/index\";\nimport AuthorPage from \"./features/author/AuthorPage\";\nimport { toAuthor, toTask, toTasks } from \"./routes\";\nimport Navigation from \"./Navigation\";\n\nexport default () => (\n    <HashRouter>\n        <Navigation />\n        <Switch>\n            <Route path={toTask()}>\n                <TaskPage />\n            </Route>\n            <Route path={toTasks()}>\n                <TasksPage />\n            </Route>\n            <Route path={toAuthor()}>\n                <AuthorPage />\n            </Route>\n            <Route path=\"/\">\n                <Redirect to={toTasks()} />\n            </Route>\n        </Switch>\n    </HashRouter>\n);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    font-family: \"Montserrat\", sans-serif;\n    margin: 0 auto;\n    max-width: 900px;\n    background: rgba(219, 216, 216, 0.733);\n    font-size: 15px;\n}\n`;\n","export const getExampleTasks = async () => {\n  const response = await fetch('/todo-list-react/exampleTasks.json');\n\n  if (!response.ok) {\n    new Error(response.statusText);\n  }\n\n  return await response.json();\n};\n","import {\n  throttle,\n  call,\n  put,\n  delay,\n  takeEvery,\n  select,\n} from 'redux-saga/effects';\nimport { getExampleTasks } from './getExampleTasks';\nimport { saveTasksInLocalStorage } from './tasksLocalStorage';\nimport {\n  fetchExampleTasks,\n  selectTasks,\n  fetchExampleTasksSuccess,\n  fetchExampleTasksError,\n} from './tasksSlice';\n\nfunction* fetchExampleTasksHandler() {\n  try {\n    yield delay(1000);\n    const exampleTasks = yield call(getExampleTasks);\n    yield put(fetchExampleTasksSuccess(exampleTasks));\n  } catch (error) {\n    yield put(fetchExampleTasksError());\n    yield call(alert, 'Coś poszło nie tak!');\n  }\n}\n\nfunction* saveTasksInLocalStorageHandler() {\n  const tasks = yield select(selectTasks);\n  yield call(saveTasksInLocalStorage, tasks);\n}\n\nexport function* tasksSaga() {\n  yield throttle(2_000, fetchExampleTasks.type, fetchExampleTasksHandler);\n  yield takeEvery('*', saveTasksInLocalStorageHandler);\n}\n","import { all } from '@redux-saga/core/effects';\nimport { tasksSaga } from './features/tasks/tasksSaga';\n\nexport default function* rootSaga() {\n  yield all([tasksSaga()]);\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport tasksReducer from './features/tasks/tasksSlice';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    tasks: tasksReducer,\n  },\n  middleware: [sagaMiddleware],\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Normalize } from 'styled-normalize';\nimport { Provider } from 'react-redux';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './theme';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Normalize />\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n  color: {\n    green: '#00800',\n    red: '#ff0000',\n    teal: 'teal',\n    white: 'white',\n    grey: 'grey',\n  },\n  breakpoint: {\n    mobile: 500,\n    mobileMax: 767,\n  },\n};\n"],"sourceRoot":""}