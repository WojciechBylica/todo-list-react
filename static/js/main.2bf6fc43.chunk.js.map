{"version":3,"sources":["features/tasks/Form/styled.js","features/tasks/tasksSlice.js","features/tasks/Form/index.js","features/tasks/Form/useForm.js","features/tasks/TaskList/styled.js","features/tasks/TaskList/index.js","features/tasks/Buttons/syled.js","features/tasks/Buttons/index.js","common/Section/styled.js","common/Section/index.js","common/Header/styled.js","common/Header/index.js","common/Container/index.js","features/tasks/Tasks.js","App.js","reportWebVitals.js","GlobalStyle.js","store.js","index.js","theme.js"],"names":["FormElement","styled","form","Input","input","FormButton","button","theme","color","teal","white","breakpoint","mobileMax","tasksSlice","createSlice","name","initialState","tasks","hideDone","reducers","addTask","payload","push","toggleHideDone","state","toggleTaskDone","index","findIndex","id","done","removeTask","splice","setAllDone","actions","selectTasks","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","focusInput","current","focus","useForm","dispatch","useDispatch","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","content","nanoid","autoFocus","ref","value","placeholder","onChange","target","onClick","List","ul","Item","li","hidden","css","Content","span","Button","toggleDone","green","remove","red","TaskList","useSelector","map","task","ButtonsDiv","div","ButtonAdditional","grey","Buttons","length","disabled","every","some","PageSection","section","PageSectionDiv","PageSectionH2","h2","Section","title","body","extraContent","PageHeader","header","Header","Container","children","Tasks","useEffect","localStorage","setItem","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","configureStore","reducer","tasksReducer","ReactDOM","render","StrictMode","store","App","document","getElementById"],"mappings":"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","file":"static/js/main.2bf6fc43.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FormElement = styled.form`\n    padding: 20px;\n    background: white;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n`;\n\nexport const Input = styled.input`\n    flex-grow: 1;\n    padding: 10px;\n    border: 1px solid #80808040;\n    border-radius: 1px;\n`;\n\nexport const FormButton = styled.button`\n    background: ${({ theme }) => theme.color.teal};\n    color: ${({ theme }) => theme.color.white};\n    padding: 10px;\n    margin: 0px 0px 0px 15px;\n    border: none;\n    cursor: pointer;\n    transition: 1s;\n\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\n        flex-basis: 100%;\n        margin: 7px 0px;\n    }\n\n    &:hover {\n    filter: brightness(110%);\n    transform: scale(1.1);\n    }   \n\n    &:active {\n        filter: brightness(120%);\n    }\n\n    \n`;","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst tasksSlice = createSlice({\n    name: 'tasks',\n    initialState: {\n        tasks: [],\n        hideDone: false,\n    },\n    reducers: {\n        addTask: ({ tasks }, { payload }) => {\n            tasks.push(payload);\n        },\n        toggleHideDone: state => {\n            state.hideDone = !state.hideDone;\n        },\n        toggleTaskDone: ({ tasks }, { payload }) => {\n            const index = tasks.findIndex(({ id }) => id === payload);\n            tasks[index].done = !tasks[index].done;\n        },\n        removeTask: ({ tasks }, { payload }) => {\n            const index = tasks.findIndex(({ id }) => id === payload);\n            tasks.splice(index);\n        },\n        setAllDone: ({ tasks }) => {\n            for (const task of tasks) {\n                task.done = true\n            }\n        },\n    },\n});\n\nexport const { addTask, toggleHideDone, toggleTaskDone, removeTask, setAllDone } = tasksSlice.actions;\nexport const selectTasks = state => state.tasks;\nexport default tasksSlice.reducer;","import { FormElement, Input, FormButton } from \"./styled\";\nimport { useForm } from \"./useForm\";\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { addTask } from \"../tasksSlice\";\n\nconst Form = () => {\n  const {\n    newTaskContent,\n    setNewTaskContent,\n    inputRef,\n    focusInput,\n  } = useForm()\n\n  const dispatch = useDispatch();\n\n  const onFormSubmit = (event,) => {\n    event.preventDefault();\n    const trimmedNewTaskContent = newTaskContent.trim();\n\n    if (trimmedNewTaskContent) {\n\n      dispatch(addTask({\n        content: trimmedNewTaskContent,\n        done: false,\n        id: nanoid(),\n      }));\n\n      setNewTaskContent(\"\");\n    };\n  };\n\n  return (\n    <FormElement onSubmit={onFormSubmit}>\n      <Input\n        autoFocus\n        ref={inputRef}\n        value={newTaskContent}\n        placeholder=\"Co jest do zrobienia?\"\n        onChange={({ target }) => setNewTaskContent(target.value)}\n      />\n\n      <FormButton onClick={focusInput}>Dodaj zadanie</FormButton>\n    </FormElement>\n  );\n};\n\nexport default Form;","import { useState, useRef, } from \"react\";\n\nexport const useForm = () => {\n    const [newTaskContent, setNewTaskContent] = useState(\"\")\n\n    const inputRef = useRef();\n    const focusInput = () => {\n        inputRef.current.focus()\n    };\n\n    return {\n        newTaskContent,\n        setNewTaskContent,\n        inputRef,\n        focusInput,\n    };\n};","import styled, { css } from \"styled-components\";\n\nexport const List = styled.ul`\n    padding: 20px 0px;\n    margin: 0px;\n    background: white;\n`;\n\nexport const Item = styled.li`\n    display: flex;\n    margin: 0px 15px;\n    padding: 10px;\n    align-items: center;\n    border-bottom: 1px solid #80808040;\n    word-break: break-word;\n\n   ${({ hidden }) => hidden && css`\n        display: none;\n   `}\n`;\n\nexport const Content = styled.span`\n    padding: 0px 10px;\n    flex-grow: 1;\n    color: #565555;\n    ${({ done }) => done && css`\n        text-decoration: line-through;\n    `}\n`;\n\nexport const Button = styled.button`\n    background: green;\n    border: none;\n    width: 27px;\n    height: 27px;\n    padding: 5px;\n    color: white;\n    flex-shrink: 0;\n    cursor: pointer;\n    transition: 0.3s;\n\n    ${({ toggleDone }) => toggleDone && css`\n        background : ${({ theme }) => theme.color.green};\n\n        &:hover {\n            filter: brightness(110%);\n    }       \n\n        &:active {\n            filter: brightness(120%);\n        }\n    `}\n\n    ${({ remove }) => remove && css`\n    background: ${({ theme }) => theme.color.red};\n   \n    &:hover {\n        filter: brightness(110%);\n    }\n\n    &:active {\n        filter: brightness(120%);\n    }\n    `} \n`;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectTasks, toggleTaskDone, removeTask } from \"../tasksSlice\";\nimport { List, Item, Content, Button } from \"./styled\";\n\nconst TaskList = () => {\n    const { tasks, hideDone } = useSelector(selectTasks);\n    const dispatch = useDispatch();\n    return (\n        <List>\n            {tasks.map(task => (\n                <Item\n                    key={task.id}\n                    hidden={task.done && hideDone}\n                >\n\n                    <Button\n                        toggleDone\n                        onClick={() => dispatch(toggleTaskDone(task.id))}\n                    >\n                        {task.done ? \"✓\" : \"\"}\n                    </Button>\n\n                    <Content done={task.done}>\n                        {task.content}\n                    </Content>\n\n                    <Button\n                        remove\n                        onClick={() => dispatch(removeTask(task.id))}\n                    >\n                        &#128465;\n                    </Button>\n                </Item>\n            ))}\n        </List>\n    );\n};\n\nexport default TaskList;","import styled from \"styled-components\";\n\nexport const ButtonsDiv = styled.div`\n    display: flex;\n    align-items: center;\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\n        flex-direction: column;\n        flex-basis: 100%;\n    }\n`;\n\nexport const ButtonAdditional = styled.button`\n    border: none;\n    background: ${({ theme }) => theme.color.white};\n    color: ${({ theme }) => theme.color.teal};\n    grid-gap: 20px;\n    transition: 1s;\n    margin: 10px 0px;\n    cursor: pointer;\n\n    &:hover {\n    filter: brightness(110%);\n    }\n\n    &:active {\n        filter: brightness(120%);\n    }\n\n    &:disabled {\n        color: ${({ theme }) => theme.color.grey};\n    cursor: unset;\n    }\n`;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectTasks, toggleHideDone, setAllDone } from \"../tasksSlice\";\nimport { ButtonsDiv, ButtonAdditional } from \"./syled\";\n\nconst Buttons = () => {\n    const { tasks, hideDone } = useSelector(selectTasks);\n    const dispatch = useDispatch()\n    return (\n        <ButtonsDiv>\n            {tasks.length > 0 && (\n                <>\n                    <ButtonAdditional onClick={() => dispatch(toggleHideDone())}\n                        disabled={tasks.every(({ done }) => !done)}\n                    >\n                        {tasks.some(({ done }) => done) ? `${hideDone ? \"Pokaż\" : \"Ukryj\"}` : \"Ukryj\"} ukończone\n                    </ButtonAdditional>\n\n                    <ButtonAdditional\n                        onClick={() => dispatch(setAllDone())}\n                        disabled={tasks.every(({ done }) => done)}\n                    >\n                        Ukończ wszystkie\n                    </ButtonAdditional>\n                </>\n            )}\n        </ButtonsDiv>\n    )\n};\n\nexport default Buttons;","import styled from \"styled-components\";\n\nexport const PageSection = styled.section`\n     margin: 0 5px 5px;\n`;\n\nexport const PageSectionDiv = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    background: white;\n    margin: 0px 0px 1px 0px;\n    padding-right: 15px;\n`;\n\nexport const PageSectionH2 = styled.h2`\n    margin: 0 0 1px;\n    padding: 15px;\n    background: ${({ theme }) => theme.color.white};\n    font-size: 17px;\n`;","import React from \"react\";\nimport { PageSection, PageSectionDiv, PageSectionH2 } from \"./styled\";\n\nconst Section = ({ title, body, extraContent }) => (\n    <PageSection>\n        <PageSectionDiv>\n            <PageSectionH2>{title}</PageSectionH2>\n            {extraContent}\n        </PageSectionDiv>\n        {body}\n    </PageSection>\n);\n\nexport default Section;","import styled from \"styled-components\";\n\nexport const PageHeader = styled.header`\n    margin: 0px 5px;\n`;","import React from \"react\";\nimport { PageHeader } from \"./styled\";\n\nconst Header = ({ title }) => (\n    <PageHeader>\n        <h1>{title}</h1>\n    </PageHeader>\n);\n\nexport default Header;","import React from \"react\";\n\nconst Container = ({ children }) => (\n    <main>\n        {children}\n    </main>\n);\n\nexport default Container;","import React, { useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Form from \"./Form\";\nimport TaskList from \"./TaskList\";\nimport Buttons from \"./Buttons\";\nimport Section from \"../../common/Section\";\nimport Header from \"../../common/Header\";\nimport Container from \"../../common/Container\";\nimport { selectTasks } from './tasksSlice';\n\nfunction Tasks() {\n  const { tasks } = useSelector(selectTasks);\n\n  useEffect(() => {\n    localStorage.setItem(\"savedTasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <Container>\n      <Header\n        title=\"Lista zadań\"\n      />\n\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form />}\n      />\n\n      <Section\n        title=\"Lista zadań\"\n        body={<TaskList />}\n        extraContent={<Buttons />}\n      />\n    </Container>\n  );\n};\n\nexport default Tasks;","import React from \"react\";\nimport  Tasks  from \"./features/tasks/Tasks\"\n\nexport default () => <Tasks />;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    font-family: \"Montserrat\", sans-serif;\n    margin: 0 auto;\n    max-width: 900px;\n    background: rgba(219, 216, 216, 0.733);\n    font-size: 15px;\n}\n`;","import { configureStore } from \"@reduxjs/toolkit\";\nimport tasksReducer from \"./features/tasks/tasksSlice\";\n\nexport default configureStore({\n    reducer: {\n        tasks: tasksReducer,\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Normalize } from 'styled-normalize';\nimport { Provider } from 'react-redux';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from \"./theme\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Normalize />\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    color: {\n        green: \"#00800\",\n        red: \"#ff0000\",\n        teal: \"teal\",\n        white: \"white\",\n        grey: \"grey\",\n    },\n    breakpoint: {\n        mobileMax:767,\n    },\n};"],"sourceRoot":""}