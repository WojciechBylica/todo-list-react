{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/syled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["FormElement","styled","form","Input","input","FormButton","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","value","placeholder","onChange","target","List","ul","Item","li","hidden","css","Content","span","done","Button","toggleDone","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","ButtonsDiv","div","ButtonAdditional","Buttons","toggleHideDone","setAllDone","length","disabled","every","some","PageSection","section","PageSectionDiv","PageSectionH2","h2","Section","title","body","extraContent","PageHeader","header","Header","Container","children","getInitialTasks","tasksFromLocalStorage","localStorage","getItem","JSON","parse","App","sethideDone","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab6a345e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FormElement = styled.form`\n    padding: 20px;\n    background: white;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n`;\n\nexport const Input = styled.input`\n    flex-grow: 1;\n    padding: 10px;\n    border: 1px solid #80808040;\n    border-radius: 1px;\n`;\n\nexport const FormButton = styled.button`\n    background: teal;\n    color: white;\n    padding: 10px;\n    margin: 0px 0px 0px 15px;\n    border: none;\n    cursor: pointer;\n    transition: 1s;\n\n    @media(max-width: 500px) {\n        flex-basis: 100%;\n        margin: 7px 0px;\n    }\n\n    &:active {\n    background: rgb(3, 184, 184);\n    }\n\n    &:hover {\n    background: rgb(2, 156, 156);\n    transform: scale(1.1);\n    }   \n`;","import React, { useState } from \"react\";\nimport { FormElement, Input, FormButton } from \"./styled\";\n\nconst Form = ({ addNewTask }) => {\n  const [newTaskContent, setNewTaskContent] = useState(\"\")\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const trimmedNewTaskContent = newTaskContent.trim();\n    if (trimmedNewTaskContent) {\n      addNewTask(trimmedNewTaskContent);\n      setNewTaskContent(\"\");\n    };\n\n  };\n\n  return (\n    <FormElement onSubmit={onFormSubmit}>\n      <Input\n        value={newTaskContent}\n        placeholder=\"Co jest do zrobienia?\"\n        onChange={({ target }) => setNewTaskContent(target.value)}\n      />\n      <FormButton>Dodaj zadanie</FormButton>\n    </FormElement>\n  );\n};\n\nexport default Form;","import styled, { css } from \"styled-components\";\n\nexport const List = styled.ul`\n    padding: 20px 0px;\n    margin: 0px;\n    background: white;\n`;\n\nexport const Item = styled.li`\n    display: flex;\n    margin: 0px 15px;\n    padding: 10px;\n    align-items: center;\n    border-bottom: 1px solid #80808040;\n    word-break: break-word;\n\n   ${({ hidden }) => hidden && css`\n        display: none;\n   `}\n`;\n\nexport const Content = styled.span`\n    padding: 0px 10px;\n    flex-grow: 1;\n    color: #565555;\n    ${({ done }) => done && css`\n        text-decoration: line-through;\n    `}\n`;\n\nexport const Button = styled.button`\n    background: green;\n    border: none;\n    width: 27px;\n    height: 27px;\n    padding: 5px;\n    color: white;\n    flex-shrink: 0;\n    cursor: pointer;\n    transition: 0.3s;\n\n    ${({ toggleDone }) => toggleDone && css`\n        background : hsl(120, 61%, 34%);\n\n        &:hover {\n        background: hsl(120, 61%, 40%);\n    }       \n\n        &:active {\n            background: hsl(120, 61%, 45%);\n        }\n    `}\n\n    ${({ remove }) => remove && css`\n    background: red;\n\n    &:hover {\n        background: rgb(248, 90, 90);\n    }\n\n    &:active {\n        background: rgb(236, 128, 128);\n    }\n    `} \n`;","import React from \"react\";\nimport { List, Item, Content, Button } from \"./styled\";\n\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => {\n\n    return (\n        <List>\n            {tasks.map(task => (\n                <Item\n                    key={task.id}\n                    hidden={task.done && hideDone}\n                >\n                    <Button\n                        toggleDone\n                        onClick={() => toggleTaskDone(task.id)}\n                    >\n                        {task.done ? \"✓\" : \"\"}\n                    </Button>\n                    <Content done={task.done}>\n                        {task.content}\n                    </Content>\n                    <Button\n                        remove\n                        onClick={() => removeTask(task.id)}\n                    >\n                        &#128465;\n                    </Button>\n                </Item>\n            ))}\n        </List>\n    );\n};\n\nexport default Tasks;","import styled from \"styled-components\";\n\nexport const ButtonsDiv = styled.div`\n    display: flex;\n    align-items: center;\n\n    @media (max-width:500px) {\n        flex-direction: column;\n        flex-basis: 100%;\n    }\n`;\n\nexport const ButtonAdditional = styled.button`\n    border: none;\n    background: white;\n    color: teal;\n    grid-gap: 20px;\n    transition: 1s;\n    margin: 10px 0px;\n    cursor: pointer;\n\n    &:active {\n    color: rgb(7, 197, 197);\n    }\n\n    &:hover {\n    color: rgb(8, 182, 182);\n    }\n\n    &:disabled {\n    color: grey;\n    cursor: unset;\n    }\n`;","import React from \"react\";\nimport { ButtonsDiv, ButtonAdditional } from \"./syled\";\n\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\n\n    <ButtonsDiv>\n        {tasks.length > 0 && (\n            <>\n                <ButtonAdditional onClick={toggleHideDone}\n                    disabled={tasks.every(({ done }) => !done)}\n                >\n                    {tasks.some(({ done }) => done) ? `${hideDone ? \"Pokaż\" : \"Ukryj\"}` : \"Ukryj\"} ukończone\n                </ButtonAdditional>\n\n                <ButtonAdditional\n                    onClick={setAllDone}\n                    disabled={tasks.every(({ done }) => done)}\n                >\n                    Ukończ wszystkie\n                </ButtonAdditional>\n            </>\n        )}\n    </ButtonsDiv>\n);\n\nexport default Buttons;","import styled from \"styled-components\";\n\nexport const PageSection = styled.section`\n     margin: 0 5px 5px;\n`;\n\nexport const PageSectionDiv = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    background: white;\n    margin: 0px 0px 1px 0px;\n    padding-right: 15px;\n`;\n\nexport const PageSectionH2 = styled.h2`\n    margin: 0 0 1px;\n    padding: 15px;\n    background: white;\n    font-size: 17px;\n`;","import React from \"react\";\nimport { PageSection, PageSectionDiv, PageSectionH2 } from \"./styled\";\n\nconst Section = ({ title, body, extraContent }) => (\n    <PageSection>\n        <PageSectionDiv>\n            <PageSectionH2>{title}</PageSectionH2>\n            {extraContent}\n        </PageSectionDiv>\n        {body}\n    </PageSection>\n);\n\nexport default Section;","import styled from \"styled-components\";\n\nexport const PageHeader = styled.header`\n    margin: 0px 5px;\n`;","import React from \"react\";\nimport { PageHeader } from \"./styled\";\n\nconst Header = ({ title }) => (\n    <PageHeader>\n        <h1>{title}</h1>\n    </PageHeader>\n);\n\nexport default Header;","import React from \"react\";\n\nconst Container = ({ children }) => (\n    <main>\n        {children}\n    </main>\n);\n\nexport default Container;","import React, { useState, useEffect } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nconst getInitialTasks = () => {\n  const tasksFromLocalStorage = localStorage.getItem(\"savedTasks\");\n  return tasksFromLocalStorage\n    ? JSON.parse(tasksFromLocalStorage)\n    : [];\n};\n\nfunction App() {\n  const [hideDone, sethideDone] = useState(false);\n\n  const [tasks, setTasks] = useState(getInitialTasks);\n\n  const toggleHideDone = () => {\n    sethideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      }]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"savedTasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <Container>\n      <Header\n        title=\"Lista zadań\"\n      />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadań\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone} />\n        }\n      />\n    </Container>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}